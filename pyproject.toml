[tool.poetry]
name = "ticket-sales"
version = "0.1.0"
description = "Ticket Sales"
authors = ["candidosouza <candidosouzza@gmail.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
pytest = "^7.4.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
taskipy = "^1.12.0"
blue = "^0.9.1"
ruff = "^0.0.284"
httpx = "^0.24.1"
isort = "^5.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#  ruff na configuração padrão. siguir a PEP-8, usando 80 caracteres por linha e ignorando o ambiente virtual e pasta de migrações do banco de dados:
[tool.ruff]
line-length = 79
exclude = ['.venv', 'migrations']

#  isort para o formato do Black, que coloca uma instrução import por linha para evitar conflitos no git e também usar a base da PEP-8 para 80 caracteres:
[tool.isort]
profile = "black"
line_length = 79

#  pytest para reconhecer o caminho base para execução dos testes na raiz do projeto ./src:
[tool.pytest.ini_options]
pythonpath = "./src"

#  blue para excluir o caminho das migrações quando essas forem utilizadas:
[tool.blue]
extend-exclude = '(migrations/)'

#  simplificar a execução de certos comandos
[tool.taskipy.tasks]
lint = 'ruff . && blue --check . --diff'
format = 'blue .  && isort .'
pre_test = 'task lint'
test = 'pytest -s -x --cov=src -vv'
post_test = 'coverage html'